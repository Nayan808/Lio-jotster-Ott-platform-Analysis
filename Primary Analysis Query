Q1. 
  => Lio Cinema
      SELECT  
       case
            when month(subscription_date) between 1 and 3 then 'Q1'
            when month(subscription_date) between 4 and 6 then 'Q2'
            when month(subscription_date) between 7 and 9 then 'Q3'
            when month(subscription_date) between 10 and 12 then 'Q4'
       end as quater,
       count(distinct(user_id)) as total_user
      FROM content_consumption
      join subscribers using(user_id)
      group by quater
      order by quater;

  => Jotster
      SELECT  
       case
            when month(subscription_date) between 1 and 3 then 'Q1'
            when month(subscription_date) between 4 and 6 then 'Q2'
            when month(subscription_date) between 7 and 9 then 'Q3'
            when month(subscription_date) between 10 and 12 then 'Q4'
       end as quater,
       count(distinct(user_id)) as total_user
      FROM content_consumption
      join subscribers using(user_id)
      group by quater
      order by quater;

Q2.
  => liocinema
      select language,content_type, count(distinct(content_id)) as total
      from liocinema_db.contents
      group by language,content_type;

  => JotStar
      select language,content_type, count(distinct(content_id)) as total
      from jotstar_db.contents
      group by language,content_type;

Q3.
  => liocinema
      select city_tier,age_group,subscription_plan, count(distinct(user_id)) as total_users
      from liocinema_db.subscribers
      group by city_tier,age_group,subscription_plan;

  => jotstar
      select city_tier,age_group,subscription_plan, count(distinct(user_id)) as total_users
      from jotstar_db.subscribers
      group by city_tier,age_group,subscription_plan;

Q4.
  => liocinema 
      select age_group,subscription_plan,
         case when last_active_date is null then "Active"
         else "InActive"
         end as user_status,
      count(distinct(user_id)) as total
      from liocinema_db.subscribers
      group by age_group,subscription_plan,user_status
      order by age_group,subscription_plan;
  => jotster
      select age_group,subscription_plan,
         case when last_active_date is null then "Active"
         else "InActive"
         end as user_status,
      count(distinct(user_id)) as total
      from jotstar_db.subscribers
      group by age_group,subscription_plan,user_status
      order by age_group,subscription_plan;

Q5.
  
